{
  "name": "QRManagerAgent",
  "version": "1.0.0",
  "description": "SmythOS agent for QR code generation, validation, and scan event handling",
  "type": "reactive",
  "capabilities": [
    "qr_generation",
    "qr_validation",
    "scan_verification",
    "location_validation",
    "fraud_detection"
  ],
  "inputs": [
    {
      "name": "action",
      "type": "string",
      "required": true,
      "enum": ["generate", "validate", "scan", "revoke"]
    },
    {
      "name": "hunt_id",
      "type": "uuid",
      "required": true
    },
    {
      "name": "shop_id",
      "type": "uuid",
      "required": true
    },
    {
      "name": "team_id",
      "type": "uuid",
      "required": false
    },
    {
      "name": "user_id",
      "type": "uuid",
      "required": true
    },
    {
      "name": "scan_data",
      "type": "object",
      "required": false,
      "schema": {
        "qr_code": "string",
        "location": {
          "latitude": "number",
          "longitude": "number"
        },
        "timestamp": "datetime",
        "device_info": "object"
      }
    }
  ],
  "outputs": [
    {
      "name": "result",
      "type": "object",
      "schema": {
        "success": "boolean",
        "qr_code": "string",
        "qr_image": "string",
        "points_awarded": "integer",
        "verification_status": "string",
        "message": "string"
      }
    }
  ],
  "workflow": {
    "steps": [
      {
        "id": "validate_request",
        "type": "validate",
        "description": "Validate incoming request parameters"
      },
      {
        "id": "check_permissions",
        "type": "authorize",
        "description": "Verify user has permission for requested action"
      },
      {
        "id": "process_action",
        "type": "branch",
        "branches": [
          {
            "condition": "action == 'generate'",
            "steps": [
              {
                "id": "generate_code",
                "type": "generate",
                "description": "Create unique QR code"
              },
              {
                "id": "generate_image",
                "type": "render",
                "description": "Create QR code image"
              },
              {
                "id": "store_qr",
                "type": "database",
                "operation": "insert"
              }
            ]
          },
          {
            "condition": "action == 'scan'",
            "steps": [
              {
                "id": "validate_qr",
                "type": "validate",
                "description": "Check QR code validity"
              },
              {
                "id": "check_location",
                "type": "validate",
                "description": "Verify scan location"
              },
              {
                "id": "check_fraud",
                "type": "analyze",
                "description": "Detect potential fraud"
              },
              {
                "id": "award_points",
                "type": "calculate",
                "description": "Calculate and award points"
              },
              {
                "id": "record_scan",
                "type": "database",
                "operation": "insert"
              },
              {
                "id": "emit_event",
                "type": "event",
                "event": "scan_completed"
              }
            ]
          }
        ]
      }
    ]
  },
  "rules": {
    "qr_generation": {
      "format": "UUID-v4",
      "expiry": "hunt_end_time + 1_hour",
      "max_scans": 1,
      "unique_per": ["hunt_id", "shop_id", "team_id"]
    },
    "location_validation": {
      "max_distance": 100,
      "unit": "meters",
      "grace_period": 300
    },
    "fraud_detection": {
      "min_time_between_scans": 60,
      "max_scans_per_hour": 10,
      "velocity_check": true,
      "device_fingerprinting": true
    },
    "points_calculation": {
      "base_points": 100,
      "hint_penalty": 20,
      "time_bonus": {
        "enabled": true,
        "max_bonus": 50,
        "decay_rate": 0.1
      }
    }
  },
  "integrations": {
    "database": {
      "type": "postgresql",
      "tables": ["qr_codes", "scans", "hunt_progress"]
    },
    "cache": {
      "type": "redis",
      "ttl": 300
    },
    "events": {
      "publisher": "redis",
      "topics": ["scan_events", "leaderboard_updates"]
    },
    "api": {
      "endpoints": [
        {
          "path": "/qr/generate",
          "method": "POST",
          "auth": "jwt"
        },
        {
          "path": "/qr/scan",
          "method": "POST",
          "auth": "jwt"
        },
        {
          "path": "/qr/validate",
          "method": "GET",
          "auth": "jwt"
        }
      ]
    }
  },
  "monitoring": {
    "metrics": [
      "qr_generation_count",
      "scan_success_rate",
      "fraud_detection_rate",
      "average_scan_time",
      "location_validation_failures"
    ],
    "alerts": [
      {
        "condition": "fraud_detection_rate > 0.05",
        "message": "High fraud detection rate"
      },
      {
        "condition": "scan_success_rate < 0.9",
        "message": "Low scan success rate"
      }
    ]
  },
  "deployment": {
    "resources": {
      "cpu": "0.5",
      "memory": "256Mi"
    },
    "scaling": {
      "min_replicas": 1,
      "max_replicas": 10,
      "target_cpu_utilization": 60
    }
  }
}