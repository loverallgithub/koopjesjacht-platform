#version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: scavenger_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-scavenger}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-scavenger_secret}
      POSTGRES_DB: ${DB_NAME:-scavenger_hunt}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - scavenger_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-scavenger}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: scavenger_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - scavenger_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # Note: container_name removed for compatibility with replicas scaling
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3527
      DATABASE_URL: postgresql://${DB_USER:-scavenger}:${DB_PASSWORD:-scavenger_secret}@postgres:5432/${DB_NAME:-scavenger_hunt}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET}
    ports:
      - "3527:3527"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - scavenger_network
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.static
    container_name: scavenger_frontend
    ports:
      - "8081:80"
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  clue-agent:
    build:
      context: ./agents/clue-generator
      dockerfile: Dockerfile
    container_name: scavenger_clue_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9001
      DATABASE_URL: postgresql://${DB_USER:-scavenger}:${DB_PASSWORD:-scavenger_secret}@postgres:5432/${DB_NAME:-scavenger_hunt}
      REDIS_URL: redis://redis:6379
    ports:
      - "9001:9001"
    depends_on:
      - postgres
      - redis
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  qr-agent:
    build:
      context: ./agents/qr-manager
      dockerfile: Dockerfile
    container_name: scavenger_qr_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9002
      DATABASE_URL: postgresql://${DB_USER:-scavenger}:${DB_PASSWORD:-scavenger_secret}@postgres:5432/${DB_NAME:-scavenger_hunt}
      REDIS_URL: redis://redis:6379
    ports:
      - "9002:9002"
    depends_on:
      - postgres
      - redis
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  stats-agent:
    build:
      context: ./agents/stats-aggregator
      dockerfile: Dockerfile
    container_name: scavenger_stats_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9003
      DATABASE_URL: postgresql://${DB_USER:-scavenger}:${DB_PASSWORD:-scavenger_secret}@postgres:5432/${DB_NAME:-scavenger_hunt}
      REDIS_URL: redis://redis:6379
    ports:
      - "9003:9003"
    depends_on:
      - postgres
      - redis
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  payment-agent:
    build:
      context: ./agents/payment-handler
      dockerfile: Dockerfile
    container_name: scavenger_payment_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9004
      DATABASE_URL: postgresql://${DB_USER:-scavenger}:${DB_PASSWORD:-scavenger_secret}@postgres:5432/${DB_NAME:-scavenger_hunt}
      REDIS_URL: redis://redis:6379
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET}
      MOLLIE_API_KEY: ${MOLLIE_API_KEY}
    ports:
      - "9004:9004"
    depends_on:
      - postgres
      - redis
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  notification-agent:
    build:
      context: ./agents/notification-service
      dockerfile: Dockerfile
    container_name: scavenger_notification_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9005
      DATABASE_URL: postgresql://${DB_USER:-scavenger}:${DB_PASSWORD:-scavenger_secret}@postgres:5432/${DB_NAME:-scavenger_hunt}
      REDIS_URL: redis://redis:6379
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
    ports:
      - "9005:9005"
    depends_on:
      - postgres
      - redis
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  venue-agent:
    build:
      context: ./agents/venue-management
      dockerfile: Dockerfile
    container_name: scavenger_venue_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9006
      DATABASE_URL: postgresql://${DB_USER:-scavenger}:${DB_PASSWORD:-scavenger_secret}@postgres:5432/${DB_NAME:-scavenger_hunt}
      REDIS_URL: redis://redis:6379
      REWARD_AGENT_URL: http://payment-agent:9004
      STATS_AGGREGATOR_URL: http://stats-agent:9003
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
    ports:
      - "9006:9006"
    depends_on:
      - postgres
      - redis
      - payment-agent
      - stats-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  media-agent:
    build:
      context: ./agents/media-upload
      dockerfile: Dockerfile
    container_name: scavenger_media_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9007
      REDIS_URL: redis://redis:6379
      STATS_AGGREGATOR_URL: http://stats-agent:9003
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      VENUE_MANAGEMENT_URL: http://venue-agent:9006
      REWARD_AGENT_URL: http://payment-agent:9004
      UPLOAD_DIR: /app/uploads/photos
      MAX_FILE_SIZE: 10485760
      ALLOWED_MIME_TYPES: image/jpeg,image/png,image/webp
    ports:
      - "9007:9007"
    depends_on:
      - redis
      - stats-agent
      - notification-agent
      - venue-agent
      - payment-agent
    networks:
      - scavenger_network
    volumes:
      - media_uploads:/app/uploads/photos
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  venue-onboarding-agent:
    build:
      context: ./agents/venue-onboarding
      dockerfile: Dockerfile
    container_name: scavenger_venue_onboarding_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9008
      REDIS_URL: redis://redis:6379
      VENUE_MANAGEMENT_URL: http://venue-agent:9006
      QR_MANAGER_URL: http://qr-agent:9002
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      UPLOAD_DIR: /app/uploads/documents
    ports:
      - "9008:9008"
    depends_on:
      - redis
      - venue-agent
      - qr-agent
      - notification-agent
    networks:
      - scavenger_network
    volumes:
      - venue_documents:/app/uploads/documents
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9008/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  hunter-onboarding-agent:
    build:
      context: ./agents/hunter-onboarding
      dockerfile: Dockerfile
    container_name: scavenger_hunter_onboarding_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9012
      REDIS_URL: redis://redis:6379
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      STATS_AGGREGATOR_URL: http://stats-agent:9003
      PAYMENT_HANDLER_URL: http://payment-agent:9004
      QR_MANAGER_URL: http://qr-agent:9002
    ports:
      - "9012:9012"
    depends_on:
      - redis
      - notification-agent
      - stats-agent
      - payment-agent
      - qr-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9012/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  support-agent:
    build:
      context: ./agents/support-agent
      dockerfile: Dockerfile
    container_name: scavenger_support_agent
    environment:
      SMYTHOS_API_KEY: ${SMYTHOS_API_KEY}
      AGENT_PORT: 9020
      REDIS_URL: redis://redis:6379
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      STATS_AGGREGATOR_URL: http://stats-agent:9003
      QR_MANAGER_URL: http://qr-agent:9002
      PAYMENT_HANDLER_URL: http://payment-agent:9004
    ports:
      - "9020:9020"
    depends_on:
      - redis
      - notification-agent
      - stats-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9020/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  social-growth-agent:
    build:
      context: ./agents/social-growth
      dockerfile: Dockerfile
    container_name: scavenger_social_growth_agent
    environment:
      AGENT_PORT: 9013
      REDIS_URL: redis://redis:6379
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      STATS_AGGREGATOR_URL: http://stats-agent:9003
      HUNTER_ONBOARDING_URL: http://hunter-onboarding-agent:9012
      QR_MANAGER_URL: http://qr-agent:9002
    ports:
      - "9013:9013"
    depends_on:
      - redis
      - notification-agent
      - stats-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9013/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  retention-agent:
    build:
      context: ./agents/retention
      dockerfile: Dockerfile
    container_name: scavenger_retention_agent
    environment:
      AGENT_PORT: 9014
      REDIS_URL: redis://redis:6379
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      STATS_AGGREGATOR_URL: http://stats-agent:9003
      QR_MANAGER_URL: http://qr-agent:9002
      SOCIAL_GROWTH_URL: http://social-growth-agent:9013
    ports:
      - "9014:9014"
    depends_on:
      - redis
      - notification-agent
      - stats-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9014/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  venue-crm-agent:
    build:
      context: ./agents/venue-crm
      dockerfile: Dockerfile
    container_name: scavenger_venue_crm_agent
    environment:
      AGENT_PORT: 9009
      REDIS_URL: redis://redis:6379
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      VENUE_MANAGEMENT_URL: http://venue-agent:9006
      VENUE_ONBOARDING_URL: http://venue-onboarding-agent:9008
      STATS_AGGREGATOR_URL: http://stats-agent:9003
    ports:
      - "9009:9009"
    depends_on:
      - redis
      - notification-agent
      - venue-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9009/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  bi-analytics-agent:
    build:
      context: ./agents/bi-analytics
      dockerfile: Dockerfile
    container_name: scavenger_bi_analytics_agent
    environment:
      AGENT_PORT: 9022
      REDIS_URL: redis://redis:6379
      STATS_AGGREGATOR_URL: http://stats-agent:9003
      VENUE_CRM_URL: http://venue-crm-agent:9009
      HUNTER_ONBOARDING_URL: http://hunter-onboarding-agent:9012
      RETENTION_URL: http://retention-agent:9014
      SOCIAL_GROWTH_URL: http://social-growth-agent:9013
    ports:
      - "9022:9022"
    depends_on:
      - redis
      - stats-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9022/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  fraud-detection-agent:
    build:
      context: ./agents/fraud-detection
      dockerfile: Dockerfile
    container_name: scavenger_fraud_detection_agent
    environment:
      AGENT_PORT: 9015
      REDIS_URL: redis://redis:6379
      STATS_AGGREGATOR_URL: http://stats-agent:9003
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      GEOLOCATION_URL: http://geolocation-agent:9008
    ports:
      - "9015:9015"
    depends_on:
      - redis
      - notification-agent
      - stats-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9015/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  referral-program-agent:
    build:
      context: ./agents/referral-program
      dockerfile: Dockerfile
    container_name: scavenger_referral_program_agent
    environment:
      AGENT_PORT: 9017
      REDIS_URL: redis://redis:6379
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      PAYMENT_HANDLER_URL: http://payment-agent:9004
      SOCIAL_GROWTH_URL: http://social-growth-agent:9013
      REFERRAL_LINK_BASE: https://koopjesjacht.nl/join
    ports:
      - "9017:9017"
    depends_on:
      - redis
      - notification-agent
      - payment-agent
      - social-growth-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9017/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  email-marketing-agent:
    build:
      context: ./agents/email-marketing
      dockerfile: Dockerfile
    container_name: scavenger_email_marketing_agent
    environment:
      AGENT_PORT: 9016
      REDIS_URL: redis://redis:6379
      NOTIFICATION_SERVICE_URL: http://notification-agent:9005
      HUNTER_ONBOARDING_URL: http://hunter-onboarding-agent:9012
      RETENTION_URL: http://retention-agent:9014
      BI_ANALYTICS_URL: http://bi-analytics-agent:9022
    ports:
      - "9016:9016"
    depends_on:
      - redis
      - notification-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9016/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  advanced-analytics-agent:
    build:
      context: ./agents/advanced-analytics
      dockerfile: Dockerfile
    container_name: scavenger_advanced_analytics_agent
    environment:
      AGENT_PORT: 9023
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://${DB_USER:-scavenger}:${DB_PASSWORD:-scavenger_secret}@postgres:5432/${DB_NAME:-scavenger_hunt}
      BI_ANALYTICS_URL: http://bi-analytics-agent:9022
      EMAIL_MARKETING_URL: http://email-marketing-agent:9016
      RETENTION_URL: http://retention-agent:9014
      PAYMENT_URL: http://payment-agent:9004
      STATS_URL: http://stats-agent:9003
      FRAUD_DETECTION_URL: http://fraud-detection-agent:9015
      REFERRAL_URL: http://referral-program-agent:9017
    ports:
      - "9023:9023"
    depends_on:
      - postgres
      - redis
      - bi-analytics-agent
      - email-marketing-agent
      - retention-agent
      - payment-agent
      - stats-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9023/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-gateway-agent:
    build:
      context: ./agents/api-gateway
      dockerfile: Dockerfile
    container_name: scavenger_api_gateway_agent
    environment:
      AGENT_PORT: 9000
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      AGENT_SECRET: ${AGENT_SECRET:-shared_agent_secret_2025}
      NODE_ENV: production
    ports:
      - "9000:9000"
    depends_on:
      - redis
      - clue-agent
      - qr-agent
      - stats-agent
      - payment-agent
      - notification-agent
      - venue-agent
      - media-agent
      - venue-onboarding-agent
      - venue-crm-agent
      - hunter-onboarding-agent
      - social-growth-agent
      - retention-agent
      - fraud-detection-agent
      - email-marketing-agent
      - referral-program-agent
      - support-agent
      - bi-analytics-agent
      - advanced-analytics-agent
    networks:
      - scavenger_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: scavenger_nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - scavenger_network
    restart: unless-stopped

networks:
  scavenger_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres_data:
  redis_data:
  media_uploads:
  venue_documents:
