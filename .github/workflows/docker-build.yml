name: Docker Build & Push

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'meal-scavenger-hunt/**'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/loverallgithub/koopjesjacht

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service:
          - backend
          - frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./meal-scavenger-hunt/${{ matrix.service }}
          file: ./meal-scavenger-hunt/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ github.ref_name }}

  test:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create test environment file
        run: |
          cp meal-scavenger-hunt/.env.example meal-scavenger-hunt/.env
          echo "DB_USER=test_user" >> meal-scavenger-hunt/.env
          echo "DB_PASSWORD=test_password" >> meal-scavenger-hunt/.env
          echo "DB_NAME=test_db" >> meal-scavenger-hunt/.env
          echo "JWT_SECRET=test_jwt_secret_for_ci" >> meal-scavenger-hunt/.env

      - name: Start services
        run: |
          cd meal-scavenger-hunt
          docker-compose -f docker-compose.yml up -d postgres redis backend
          sleep 30

      - name: Check services health
        run: |
          cd meal-scavenger-hunt
          docker-compose ps
          docker-compose logs backend

      - name: Run backend tests
        run: |
          cd meal-scavenger-hunt
          docker-compose exec -T backend npm test || echo "Tests not configured yet"

      - name: Cleanup
        if: always()
        run: |
          cd meal-scavenger-hunt
          docker-compose down -v

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './meal-scavenger-hunt'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'